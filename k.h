#ifndef K_H
#define K_H
#include "u.h"
static const byte rho[24] = {1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 2, 14,
                27, 41, 56, 8, 25, 43, 62, 18, 39, 61, 20, 44};
static const byte pi[25] = {10, 7, 11, 17, 18, 3, 5, 16, 8, 21, 24, 4,
               15, 23, 19, 13, 12, 2, 20, 14, 22, 9, 6, 1};
static const u8 RC[24] = {0x0000000000000001ULL,
                0x0000000000008082ULL,
                0x800000000000808aULL,
                0x8000000080008000ULL,
                0x000000000000808bULL,
                0x0000000080000001ULL,
                0x8000000080008081ULL,
                0x8000000000008009ULL,
                0x000000000000008aULL,
                0x0000000000000088ULL,
                0x0000000080008009ULL,
                0x000000008000000aULL,
                0x000000008000808bULL,
                0x800000000000008bULL,
                0x8000000000008089ULL,
                0x8000000000008003ULL,
                0x8000000000008002ULL,
                0x8000000000000080ULL,
                0x000000000000800aULL,
                0x800000008000000aULL,
                0x8000000080008081ULL,
                0x8000000000008080ULL,
                0x0000000080000001ULL,
                0x8000000080008008ULL};
void keccakf(void* const);

/* Round-constants; little-endian bit order:
   0000000000111111111122222222223333333333444444444455555555556666
   0123456789012345678901234567890123456789012345678901234567890123
00 1---------------------------------------------------------------
01 -1-----1-------1------------------------------------------------
02 -1-1---1-------1-----------------------------------------------1
03 ---------------1---------------1-------------------------------1
04 11-1---1-------1------------------------------------------------
05 1------------------------------1--------------------------------
06 1------1-------1---------------1-------------------------------1
07 1--1-----------1-----------------------------------------------1
08 -1-1---1--------------------------------------------------------
09 ---1---1--------------------------------------------------------
10 1--1-----------1---------------1--------------------------------
11 -1-1---------------------------1--------------------------------
12 11-1---1-------1---------------1--------------------------------
13 11-1---1-------------------------------------------------------1
14 1--1---1-------1-----------------------------------------------1
15 11-------------1-----------------------------------------------1
16 -1-------------1-----------------------------------------------1
17 -------1-------------------------------------------------------1
18 -1-1-----------1------------------------------------------------
19 -1-1---------------------------1-------------------------------1
20 1------1-------1---------------1-------------------------------1
21 -------1-------1-----------------------------------------------1
22 1------------------------------1--------------------------------
23 ---1-----------1---------------1-------------------------------1

00 01 03 07 15 31 63
00 01 02 03 04 05 06
 0  0  1  4 11 26 57
 0  1  2  3  4  5  6

#define s(m,l) ((b&(1<<m))<<l)
#define rD(b) (b&3)|s(2,1)|s(3,4)|s(4,11)|s(5,26)|s(6,57)

#define s(m,r) ((b&1<<m)>>r)


*/
#endif  // K_H
